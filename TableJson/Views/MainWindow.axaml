<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:TableJson.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:aedit="clr-namespace:AvaloniaEdit;assembly=AvaloniaEdit"
        mc:Ignorable="d" d:DesignWidth="1200" d:DesignHeight="1000"
        x:Class="TableJson.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        Icon="/Assets/avalonia-logo.ico"
	    WindowStartupLocation="CenterScreen"
		ExtendClientAreaToDecorationsHint="True"
		ExtendClientAreaTitleBarHeightHint="-1"
		Title="TableJson"
		Topmost="{Binding IsPinnedWindow}"
		>
	<Window.Styles>
		<Style Selector="TabItem">
			<Setter Property="FontSize" Value="16" />
		</Style>
		<Style Selector="ListBox">
			<Setter Property="FontSize" Value="13" />
			<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Visible" />
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible" />
			<Setter Property="SelectionMode" Value="Multiple" />
			<Setter Property="BorderThickness" Value="1" />
			<Setter Property="HorizontalAlignment" Value="Stretch" />
		</Style>
		<Style Selector="Button">
			<Setter Property="FontSize" Value="13" />
			<Setter Property="HorizontalContentAlignment" Value="Center" />
			<Setter Property="VerticalAlignment" Value="Center" />
		</Style>
		<Style Selector="Button:pointerover /template/ ContentPresenter#PART_ContentPresenter">
			<Setter Property="Background" Value="{Binding $parent[Button].Background}"></Setter>
			<Setter Property="BorderBrush" Value="Wheat"></Setter>
		</Style>
		<Style Selector="ToggleButton">
			<Setter Property="HorizontalContentAlignment" Value="Center" />
		</Style>
		<Style Selector="ComboBox">
			<Setter Property="FontSize" Value="12" />
		</Style>
		<Style Selector="SelectableTextBlock">
			<Setter Property="FontSize" Value="14" />
		</Style>
		<Style Selector="ToggleButton.Pin">
			<Style Selector="^:unchecked ContentPresenter#PART_ContentPresenter">
				<Setter Property="Content" Value="Not pinned"/>
				<Setter Property="Background" Value="DarkGoldenrod"/>
			</Style>
			<Style Selector="^:checked ContentPresenter#PART_ContentPresenter">
				<Setter Property="Content" Value="Pinned"/>
				<Setter Property="Background" Value="Green"/>
			</Style>
		</Style>
		<Style Selector="Button.UniqueKeys">
			<Setter Property="Background" Value="#C37B24D4" />
			<Setter Property="Content" Value="Unique Keys" />
		</Style>
		<Style Selector="Button.RawKeys">
			<Setter Property="Background" Value="OrangeRed" />
			<Setter Property="Content" Value="Duplicate Keys" />
		</Style>
		<Style Selector="Button.UniqueValues">
			<Setter Property="Background" Value="#C37B24D4" />
			<Setter Property="Content" Value="Unique Values" />
		</Style>
		<Style Selector="Button.RawValues">
			<Setter Property="Background" Value="OrangeRed" />
			<Setter Property="Content" Value="Duplicate Values" />
		</Style>
	</Window.Styles>
	<Border BorderThickness="1.5" BorderBrush="#D2B1A38E" IsVisible="True">
	<Grid RowDefinitions="0,50,*,10,*" ColumnDefinitions="*">
		<Label Margin="5,5,5,0" Grid.Row="1" BorderBrush="Wheat">TableJson</Label>
		<StackPanel Grid.Row="1" MinHeight="50" Margin="15,22,10,0" Orientation="Horizontal">
			<Button Content="Load from file" Background="BlueViolet" Click="ImportJsonFile_Clicked"></Button>
			<Button Background="DarkCyan" Margin="15,0,15,0" Content="Parse" Command="{Binding ParseCommand}"></Button>
			<Label Margin="15,15,5,0" BorderBrush="Wheat">Font Size</Label>
			<ComboBox ItemsSource="{Binding EditorFontSizes}" SelectedItem="{Binding #editor.FontSize, Mode=TwoWay}" Height="30" Width="70" Margin="0,10,0,0"></ComboBox>
			<ToggleButton Margin="170,10,10,10" IsChecked="{Binding IsPinnedWindow, Mode = TwoWay}" IsDefault="False" Width="95" Height="30" Classes="Pin">
			</ToggleButton>
		</StackPanel>
			<Grid Grid.Row="2" RowDefinitions="0.9*,0.1*">
				<aedit:TextEditor Grid.Row="0" x:Name="editor" BorderBrush="DarkGoldenrod" BorderThickness="2" Margin="10,0,10,0" ShowLineNumbers="True" Document="{Binding RawText, Mode=TwoWay}" ScrollViewer.HorizontalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Visible"
                               VerticalScrollBarVisibility="Visible" PointerWheelChanged="HotKeyPointerWheelHandler"></aedit:TextEditor>
				<SelectableTextBlock Grid.Row="1" Margin="10,7,10,0" Text="{Binding StatusText}"></SelectableTextBlock>
				<!--<CheckBox Grid.Row="1" HorizontalAlignment="Right" Margin="0,0,10,0" IsChecked="{Binding !#splitter.IsEnabled}" Content="Locked"></CheckBox>-->
			</Grid>
		<GridSplitter Background="DarkCyan" ShowsPreview="True" Grid.Row="3" x:Name="splitter" Margin="10,5,10,0" Height="5" ResizeDirection="Rows" ResizeBehavior="BasedOnAlignment"/>
		<DockPanel Grid.Row="4" >
			<TabControl FontSize="16">
			<TabItem Header="Stats">
				<Grid ColumnDefinitions="0.9*, 0.9*" RowDefinitions="55,0.8*"  Margin="10,5,10,5">
					<StackPanel Orientation="Horizontal" Grid.Column="0" Grid.Row="0" >
						<ComboBox Margin="10,10,10,10"></ComboBox>
						<Button IsEnabled="{Binding !!KeyEntries}" Command="{Binding ToggleKeysShowModeCommand}" Classes.UniqueKeys="{Binding ShowUniqueKeys}" Classes.RawKeys="{Binding !ShowUniqueKeys}" Margin="10,10,10,10"></Button>
						<Button IsEnabled="{Binding !!KeyEntries}" Content="Copy keys" Margin="10,10,10,10" Click="CopyToClipboardFromJSONKeys"></Button>
					</StackPanel>
					<ListBox x:Name="JSONKeysList" IsEnabled="{Binding !!KeyEntries}" Grid.Column="0" Grid.Row="1" Margin="10,10,10,10" ItemsSource="{Binding KeyEntries}"
				  BorderBrush="Gray">
						<ListBox.ItemTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding}"/>
							</DataTemplate>
						</ListBox.ItemTemplate>
					</ListBox>
					<StackPanel IsEnabled="{Binding !!KeyEntries}" Orientation="Horizontal" Grid.Column="1" Grid.Row="0">
						<Button Command="{Binding ToggleValuesShowModeCommand}" Classes.UniqueValues="{Binding ShowUniqueValues}" Classes.RawValues="{Binding !ShowUniqueValues}" Margin="10,10,10,10"></Button>
						<Button Content="Copy values" Margin="10,10,10,10" Click="CopyToClipboardFromJSONValues"></Button>
					</StackPanel>
					<ListBox x:Name="JSONValuesList" IsEnabled="{Binding !!KeyEntries}" SelectionMode="Multiple" Grid.Column="1" Grid.Row="1" Margin="10,10,10,10" ItemsSource="{Binding ValueEntries}"
				  BorderBrush="Gray">
						<ListBox.ItemTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding}"/>
							</DataTemplate>
						</ListBox.ItemTemplate>
					</ListBox>
				</Grid>
			</TabItem>
			<TabItem Header="JSONPath Query">
				<StackPanel>
					<TextBox Text="{Binding JSONPathQuery}" Margin="10,10,10,0" Watermark="Input JSONPath" HorizontalAlignment="Stretch"></TextBox>
					<DockPanel Margin="10,10,10,10">
						<Button Command="{Binding RunJsonPathQueryCommand}" Margin="5,0,5,0" Content="Run query" Width="90"></Button>
						<Button Content="Copy result" Margin="5,0,5,0" Click="CopyToClipboardFromJSONPathResult"></Button>
						<SelectableTextBlock Text="{Binding JSONPathStatus}" Margin="15,5,5,0"></SelectableTextBlock>
						<!--<Button Margin="10,0,10,0" Content="Change view mode"></Button>-->
					</DockPanel>
					<aedit:TextEditor x:Name="JSONPathResultEditor" BorderBrush="DarkGoldenrod" Document="{Binding JSONPathResult}" BorderThickness="2" Margin="10,0,10,0" ShowLineNumbers="True" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" HorizontalScrollBarVisibility="Visible"
                               VerticalScrollBarVisibility="Visible"></aedit:TextEditor>
				</StackPanel>
			</TabItem>
			<TabItem Header="Macros">
				<StackPanel>
					<TreeDataGrid x:Name="mgrid" Source="{Binding MacrosGridData}" Margin="10,10,10,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" BorderThickness="2"  BorderBrush="Gray" CanUserResizeColumns="True" >
					</TreeDataGrid>
					<Button Content="Add Macros" Margin="10,10,10,10" Command="{Binding AddMacrosCommand}">
					</Button>
				</StackPanel>
			</TabItem>
			<!--<TabItem Header="Table">
			</TabItem>-->
		</TabControl>
		</DockPanel>
	</Grid>
	</Border>
</Window>
